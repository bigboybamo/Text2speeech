<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ofd1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="ClockTimer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>112, 22</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QmCC
</value>
  </data>
</root>